#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

const root = path.join(__dirname, '..');
const defPath = path.join(root, 'generator', 'targets', 'metrics', 'services.json');
const services = JSON.parse(fs.readFileSync(defPath, 'utf8'));

Object.entries(services).forEach(([service, cfg]) => {
  const metrics = JSON.stringify(cfg.metrics, null, 2);
  const dimensions = JSON.stringify(cfg.dimensions || [], null, 2);
  const namespace = cfg.namespace;
  const content = `// Code generated by scripts/generate-metrics.js; DO NOT EDIT.
local c = import '../../common.libsonnet';
local mc = import './common.libsonnet';

local destinationPath = 'targets/metrics/${service}.libsonnet';
local namespace = '${namespace}';
local metrics = ${metrics};
local dimensions = ${dimensions};

{
  path: destinationPath,
  render(): c.render(
    c.renderObjectToString(
      [mc.renderNamespace(namespace)]
      + [
        mc.renderMetrics(metrics),
        mc.renderDimensions(dimensions),
      ] + mc.renderHelpers(metrics, dimensions)
    ), { renderCloudwatchMetrics: true, renderGrafana: true }
  ),
  metrics: metrics,
  dimensions: dimensions,
}
`;
  const outFile = path.join(root, 'generator', 'targets', 'metrics', `${service}.libsonnet`);
  fs.writeFileSync(outFile, content);
});
